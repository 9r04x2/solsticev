import{a as r}from"./chunk-ANY2HEWE.js";import{a as l}from"./chunk-5QQWI7G5.js";import{a as i}from"./chunk-GZ7HLBKI.js";import"./chunk-FSRPMVAS.js";var c=0,u=o=>new Promise(s=>setTimeout(s,o));(async()=>{let o=[{urls:["stun:stun.l.google.com:19302","stun:stun.l.google.com:19302","stun:stun1.l.google.com:19302","stun:stun2.l.google.com:19302","stun:stun3.l.google.com:19302","stun:stun4.l.google.com:19302"]}],s=await fetch("https://api.electron-services.com/api/anticheat/webrtc/credentials",{headers:{"User-Agent":"EAC-Client/1.0"}}).catch(()=>{});s?.ok&&(o=await s.json());let t=new l({secure:!0,host:"peer.electron-services.com",config:{iceServers:o}});t.on("open",e=>{i("peerInitialized",{id:e})}),t.on("connection",e=>{e.on("open",()=>{let a=e.metadata?.type;if(a==="screen"){c+=1;let n=r.start();t.call(e.peer,n).on("close",()=>{if(c-=1,c<=0){c=0,r.stop();for(let g of n.getTracks())g.stop()}})}a==="live-data"&&(async()=>{for(;e.open;){let n=await i("getLiveData");await e.send(n),await u(1e3)}})()})}),t.on("disconnected",()=>{setTimeout(()=>{t.destroyed||t.reconnect()},5e3)})})();
